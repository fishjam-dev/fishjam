# We introduce our own env vars and use them to override
# those provided by mix release.
# This is to have a unified way of configuring Jellyfish distribution
# in both development and production environments
if [ "$JF_DIST_ENABLED" == "true" ]; then
    export RELEASE_NODE=${JF_DIST_NODE_NAME:-$RELEASE_NODE}
    export RELEASE_COOKIE=${JF_DIST_COOKIE:-$RELEASE_COOKIE}

    if [ "$RELEASE_NODE" == "" ]; then
        echo "JF_DIST_ENABLED has been set but JF_DIST_NODE_NAME remains unset"
        exit 1
    fi

    if [ "$RELEASE_COOKIE" == "" ]; then
        echo "JF_DIST_ENABLED has been set but JF_COOKIE remains unset"
        exit 1
    fi

    # Use longnames by default.
    # They are required to form a cluster across diffrent machines.
    # In development, we also use longnames (when starting a new node).
    export RELEASE_DISTRIBUTION=${JF_DIST_MODE:-${RELEASE_DISTRIBUTION:-name}}

    # We only set min and max ports for start and daemon commands.
    # In other case, when someone wants to expose only one port
    # (JF_DIST_MIN_PORT==JF_DIST_MAX_PORT), we won't be able to
    # connect to already running node with the `remote` command.
    if [ "$JF_DIST_MIN_PORT" != "" ]; then
        case $RELEASE_COMMAND in
        start* | daemon*)
            ELIXIR_ERL_OPTIONS="$ELIXIR_ERL_OPTIONS -kernel inet_dist_listen_min $JF_DIST_MIN_PORT"
            export ELIXIR_ERL_OPTIONS
            ;;
        *) ;;
        esac
    fi

    if [ "$JF_DIST_MAX_PORT" != "" ]; then
        case $RELEASE_COMMAND in
        start* | daemon*)
            ELIXIR_ERL_OPTIONS="$ELIXIR_ERL_OPTIONS -kernel inet_dist_listen_max $JF_DIST_MAX_PORT"
            export ELIXIR_ERL_OPTIONS
            ;;
        *) ;;
        esac
    fi
fi
