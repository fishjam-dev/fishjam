# JF_IP and JF_PORT defines ip and port
# our HTTP endpoint socket will listen to.
# The default for Docker builds is 0.0.0.0 to allow 
# access from the outside of container.
# Note that this cannot be 127.0.0.1 as 
# in Docker it only allows for traffic
# from within the container.
# For other builds, it is 127.0.0.1 not to 
# accidentaly expose Jellyfish to the outside world
# when it runs behind some proxy like nginx.
# 
# JF_IP=0.0.0.0
# JF_PORT=5002


# JF_HOST and JF_HOST_PORT defines how Jellyfish
# should be seen from the outside.
# When you run Jellyfish behind proxy, your
# Jellyfish will run on 127.0.0.1 or 0.0.0.0
# (see JF_IP and JF_PORT for more information)
# but you don't want to and in fact you can't 
# use those addresses for generating URLs, or 
# telling Jellyfish Client to which server instance it 
# should connect to (when running Jellyfish in a cluster).
# That's why we have separate environment variables.
#
# Example
#
# You run Jellyfish on a machine with some public 
# ip address `PUB_IP` and domain `DOMAIN`.
# You most likely want to provide the following 
# configuration when running Jellyfish using Docker
# 
# JF_HOST=$DOMAIN or $PUB_IP
# JF_HOST_PORT=443
# JF_IP = 0.0.0.0
# JF_PORT = 5002
# 
# JF_IP and JF_PORT are set by default
# so everything you need to set is JF_HOST and JF_HOST_PORT
# 
JF_HOST=localhost
JF_HOST_PORT=443

# JF_METRICS_IP=0.0.0.0
# JF_METRICS_PORT=9568

# Token used for authorizing HTTP requests
JF_SERVER_API_TOKEN=jellyfish_docker_token

# Used by the server e.g. to create client tokens.
# If not set, it will be generated
# JF_SECRET_KEY_BASE=super-secret-key

# Decide if jellyfish will check origin of requests
# JF_CHECK_ORIGIN=true

# Where Jellyfish should save its artifacts
# You can get access to this directory e.g. by mounting 
# a volume with:
#
#   -v $(pwd)/jellyfish_output:/app/jellyfish_output 
#
# JF_OUTPUT_BASE_PATH=/app/jellyfish_output


# WEBRTC ENVS

# true, if WebRTC peers are used
JF_WEBRTC_USED=true

# TURN default configuration
# note: loopback address as INTEGRATED_TURN_IP cannot be used inside a Docker container
JF_INTEGRATED_TURN_IP=<your_public_ip_address>
JF_INTEGRATED_TURN_LISTEN_IP=0.0.0.0
JF_INTEGRATED_TURN_PORT_RANGE=50000-59_999
